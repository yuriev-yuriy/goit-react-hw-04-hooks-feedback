{"version":3,"sources":["components/Feedback/Section.js","components/Feedback/Statistics.js","components/Feedback/FeedbackOptions.js","components/Feedback/Notification.js","components/Feedback/Feedback.js","App.js","index.js","components/Feedback/Feedback.module.css"],"names":["Section","props","className","title","children","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","FeedbackOptions","options","onIncrease","map","option","type","onClick","Notification","message","defaultProps","Feedback","useState","setGood","setBad","setNeutral","s","state","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kNAiBeA,EAdC,SAAAC,GACd,OACE,qCACE,oBAAIC,UAAU,QAAd,SAAuBD,EAAME,QAC5BF,EAAMG,aCwBEC,EA5BI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,+BACE,qBAAIR,UAAU,OAAd,mBAA4BI,KAC5B,qBAAIJ,UAAU,OAAd,sBAA+BK,KAC/B,qBAAIL,UAAU,OAAd,kBAA2BM,KAC3B,qBAAIN,UAAU,OAAd,oBAA6BO,OAC7B,qBAAIP,UAAU,OAAd,gCACsBQ,KAAqC,EAD3D,WCQSC,EArBS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEb,UAAU,MACVc,KAAK,SACLC,QAAS,kBAAMJ,EAAWE,IAJ5B,SAMGA,GALIA,SCNTG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KAGbD,EAAaE,aAAe,CAC1BD,QAAS,IAOID,Q,gBCPA,SAASG,IAAY,IAAD,EACTC,mBAAS,GADA,mBAC1BhB,EAD0B,KACpBiB,EADoB,OAEXD,mBAAS,GAFE,mBAE1Bd,EAF0B,KAErBgB,EAFqB,OAGHF,mBAAS,GAHN,mBAG1Bf,EAH0B,KAGjBkB,EAHiB,KAkB3BhB,EAAqB,WACzB,OAAOH,EAAOC,EAAUC,GAO1B,OACE,sBAAKN,UAAWwB,IAAEL,SAAlB,UACE,cAAC,EAAD,CACEnB,UAAWwB,IAAE1B,QACbG,MAAM,yBAFR,SAKE,cAAC,EAAD,CACES,QAAS,CAAC,OAAQ,UAAW,OAC7BC,WA9BuB,SAAAE,GACd,SAAXA,EAIW,QAAXA,EAIFU,GAAW,SAAAE,GAAK,OAAIA,EAAQ,KAH5BH,GAAO,SAAAG,GAAK,OAAIA,EAAQ,KAJxBJ,GAAQ,SAAAI,GAAK,OAAIA,EAAQ,UA+BzB,cAAC,EAAD,CAASzB,UAAWwB,IAAE1B,QAASG,MAAM,aAArC,SACGM,IACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoBA,EACpBC,gCAvB8B,WACtC,OAAQJ,EAAOG,IAAwB,OAyBjC,cAAC,EAAD,CAAcU,QAAQ,2BCpDhC,IAMeS,EANH,kBACV,qBAAK1B,UAAU,MAAf,SACE,cAACmB,EAAD,OCDJQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,SAAW,8B","file":"static/js/main.2fcb6ba0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = props => {\n  return (\n    <>\n      <h2 className=\"Title\">{props.title}</h2>\n      {props.children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <ul>\n      <li className=\"List\">Good: {good}</li>\n      <li className=\"List\">Neutral: {neutral}</li>\n      <li className=\"List\">Bad: {bad}</li>\n      <li className=\"List\">Total: {countTotalFeedback()}</li>\n      <li className=\"List\">\n        Positive Feedback: {countPositiveFeedbackPercentage() || 0}%\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotalFeedback: PropTypes.func.isRequired,\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onIncrease }) => {\n  return (\n    <>\n      {options.map(option => (\n        <button\n          key={option}\n          className=\"Btn\"\n          type=\"button\"\n          onClick={() => onIncrease(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onIncrease: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Notification from './Notification';\nimport s from './Feedback.module.css';\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n\n  const increaseFeedbackOption = option => {\n    if (option === 'good') {\n      setGood(state => state + 1);\n      return;\n    }\n    if (option === 'bad') {\n      setBad(state => state + 1);\n      return;\n    } else {\n      setNeutral(state => state + 1);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return (good / countTotalFeedback()) * 100;\n  };\n\n  return (\n    <div className={s.Feedback}>\n      <Section\n        className={s.Section}\n        title=\"\n        Please leave feedback\"\n      >\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onIncrease={increaseFeedbackOption}\n        />\n      </Section>\n      <Section className={s.Section} title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotalFeedback={countTotalFeedback}\n            countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport Feedback from './components/Feedback/Feedback';\n\nconst App = () => (\n  <div className=\"App\">\n    <Feedback />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"Feedback_Feedback__1nJA7\"};"],"sourceRoot":""}